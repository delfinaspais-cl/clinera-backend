const axios = require('axios');

const BASE_URL = 'https://clinera-backend-production.up.railway.app';

async function testNewUserFlow() {
  console.log('üöÄ Iniciando prueba del nuevo flujo de usuarios...\n');

  try {
    // Paso 1: Registrar un nuevo usuario
    console.log('üìù Paso 1: Registrando nuevo usuario...');
    const registerData = {
      email: 'juan.perez@ejemplo.com',
      username: 'juan_perez',
      name: 'Juan P√©rez',
      password: 'miContrase√±a123'
    };

    const registerResponse = await axios.post(`${BASE_URL}/users/register`, registerData);
    console.log('‚úÖ Usuario registrado exitosamente:');
    console.log('   - ID:', registerResponse.data.user.id);
    console.log('   - Email:', registerResponse.data.user.email);
    console.log('   - Username:', registerResponse.data.user.username);
    console.log('   - Token:', registerResponse.data.token.substring(0, 20) + '...');
    console.log('   - üìß Email de bienvenida enviado con credenciales');
    console.log('');

    const userToken = registerResponse.data.token;

    // Paso 2: Obtener perfil del usuario
    console.log('üë§ Paso 2: Obteniendo perfil del usuario...');
    const profileResponse = await axios.get(`${BASE_URL}/users/profile`, {
      headers: { Authorization: `Bearer ${userToken}` }
    });
    console.log('‚úÖ Perfil obtenido:');
    console.log('   - Nombre:', profileResponse.data.user.name);
    console.log('   - Email:', profileResponse.data.user.email);
    console.log('   - Username:', profileResponse.data.user.username);
    console.log('   - Rol:', profileResponse.data.user.role);
    console.log('');

    // Paso 3: Crear una cl√≠nica
    console.log('üè• Paso 3: Creando nueva cl√≠nica...');
    const clinicaData = {
      nombre: 'Cl√≠nica de Prueba',
      url: 'clinica-prueba-' + Date.now(),
      email: 'admin@clinica-prueba.com',
      password: 'admin123',
      direccion: 'Av. Principal 123',
      telefono: '+54 11 1234-5678',
      descripcion: 'Cl√≠nica de prueba para el nuevo sistema',
      colorPrimario: '#3B82F6',
      colorSecundario: '#1E40AF',
      estado: 'activa'
    };

    const clinicaResponse = await axios.post(`${BASE_URL}/users/clinicas`, clinicaData, {
      headers: { Authorization: `Bearer ${userToken}` }
    });
    console.log('‚úÖ Cl√≠nica creada exitosamente:');
    console.log('   - ID:', clinicaResponse.data.clinica.id);
    console.log('   - Nombre:', clinicaResponse.data.clinica.name);
    console.log('   - URL:', clinicaResponse.data.clinica.url);
    console.log('   - Credenciales Admin:', clinicaResponse.data.adminCredentials);
    console.log('');

    // Paso 4: Obtener cl√≠nicas del usuario
    console.log('üè• Paso 4: Obteniendo cl√≠nicas del usuario...');
    const clinicasResponse = await axios.get(`${BASE_URL}/users/clinicas`, {
      headers: { Authorization: `Bearer ${userToken}` }
    });
    console.log('‚úÖ Cl√≠nicas del usuario:');
    clinicasResponse.data.clinicas.forEach((clinica, index) => {
      console.log(`   ${index + 1}. ${clinica.name} (${clinica.url})`);
    });
    console.log('');

    // Paso 5: Verificar acceso a la cl√≠nica
    console.log('üîê Paso 5: Verificando acceso a la cl√≠nica...');
    const accessResponse = await axios.get(`${BASE_URL}/users/clinicas/${clinicaData.url}/access`, {
      headers: { Authorization: `Bearer ${userToken}` }
    });
    console.log('‚úÖ Acceso verificado:');
    console.log('   - Tiene acceso:', accessResponse.data.hasAccess);
    console.log('   - Cl√≠nica:', accessResponse.data.clinica.name);
    console.log('');

    // Paso 6: Probar login con username
    console.log('üîë Paso 6: Probando login con username...');
    const loginData = {
      username: 'juan_perez', // Usando username en lugar de email
      password: 'miContrase√±a123'
    };

    const loginResponse = await axios.post(`${BASE_URL}/users/login`, loginData);
    console.log('‚úÖ Login exitoso con username:');
    console.log('   - Usuario:', loginResponse.data.user.username);
    console.log('   - Email:', loginResponse.data.user.email);
    console.log('   - Token:', loginResponse.data.token.substring(0, 20) + '...');
    console.log('');

    console.log('üéâ ¬°Flujo completo probado exitosamente!');
    console.log('\nüìã Resumen del nuevo sistema:');
    console.log('   1. ‚úÖ Los usuarios se registran con email, username, nombre y contrase√±a');
    console.log('   2. ‚úÖ Los usuarios pueden crear cl√≠nicas');
    console.log('   3. ‚úÖ Se crea autom√°ticamente un admin para cada cl√≠nica');
    console.log('   4. ‚úÖ Los usuarios pueden acceder a sus cl√≠nicas');
    console.log('   5. ‚úÖ El login funciona tanto con email como con username');

  } catch (error) {
    console.error('‚ùå Error en la prueba:', error.response?.data || error.message);
    if (error.response?.data) {
      console.error('   Detalles:', JSON.stringify(error.response.data, null, 2));
    }
  }
}

// Ejecutar la prueba
testNewUserFlow();
