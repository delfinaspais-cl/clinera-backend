import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';

async function bootstrap() {
  console.log('üöÄ Iniciando aplicaci√≥n...');
  console.log('üîç DATABASE_URL presente:', !!process.env.DATABASE_URL);
  console.log('üîç NODE_ENV:', process.env.NODE_ENV);
  console.log('üîç PORT:', process.env.PORT);
  
  try {
    // Crear aplicaci√≥n con configuraci√≥n m√≠nima
    const app = await NestFactory.create(AppModule, {
      logger: ['error', 'warn', 'log'],
      abortOnError: false, // No abortar si hay errores de dependencias
    });
    console.log('‚úÖ Aplicaci√≥n creada exitosamente');

    // Configuraci√≥n b√°sica de CORS
    app.enableCors({
      origin: true,
      credentials: true,
    });
    console.log('‚úÖ CORS habilitado');

    // Configuraci√≥n del puerto
    const port = process.env.PORT || 3000;
    console.log(`üîç Puerto configurado: ${port}`);
    
    // Configurar shutdown hooks para manejo graceful
    app.enableShutdownHooks();
    
    await app.listen(port, '0.0.0.0');
    console.log(`‚úÖ Aplicaci√≥n ejecut√°ndose en puerto ${port}`);
    console.log(`‚úÖ Health check disponible en: http://0.0.0.0:${port}/`);
    console.log(`‚úÖ Health check detallado en: http://0.0.0.0:${port}/health`);
    console.log(`‚úÖ Health check simple en: http://0.0.0.0:${port}/health/simple`);
    
    // Manejar se√±ales de terminaci√≥n
    process.on('SIGTERM', () => {
      console.log('üîÑ SIGTERM recibido, cerrando aplicaci√≥n...');
      app.close();
    });
    
    process.on('SIGINT', () => {
      console.log('üîÑ SIGINT recibido, cerrando aplicaci√≥n...');
      app.close();
    });
    
  } catch (error) {
    console.error('‚ùå Error cr√≠tico en bootstrap:', error.message);
    console.error('‚ùå Stack trace:', error.stack);
    
    // Intentar iniciar con configuraci√≥n m√≠nima
    console.log('üîÑ Intentando iniciar con configuraci√≥n m√≠nima...');
    
    try {
      const { NestFactory } = await import('@nestjs/core');
      const { AppModule } = await import('./app.module');
      
      const app = await NestFactory.create(AppModule, {
        logger: false, // Deshabilitar logs para evitar problemas
        abortOnError: false,
      });
      
      app.enableCors({ origin: true, credentials: true });
      
      const port = process.env.PORT || 3000;
      await app.listen(port, '0.0.0.0');
      
      console.log(`‚úÖ Aplicaci√≥n iniciada en modo m√≠nimo en puerto ${port}`);
      
    } catch (minimalError) {
      console.error('‚ùå Error incluso en modo m√≠nimo:', minimalError.message);
      process.exit(1);
    }
  }
}

bootstrap();
